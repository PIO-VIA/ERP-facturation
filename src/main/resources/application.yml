spring:
  application:
    name: facturation-erp

  profiles:
    active: dev

  main:
    allow-bean-definition-overriding: true

  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false

  cassandra:
    contact-points: 127.0.0.1
    port: 9042
    local-datacenter: datacenter1
    keyspace-name: facturation_erp
    schema-action: create_if_not_exists
    request:
      timeout: 10s
    connection:
      connect-timeout: 10s
      init-query-timeout: 10s

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour

  mail:
    host: localhost
    port: 1025
    username:
    password:
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080

# Configuration application
app:
  jwt:
    secret: mySecretKey
    expiration: 86400000 # 24 hours

  pdf:
    logo-path: classpath:static/images/logo.png
    output-directory: ${java.io.tmpdir}/pdfs

  email:
    from: noreply@yooyob.com
    templates:
      base-url: http://localhost:8080

# Configuration Swagger/OpenAPI
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /docs
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: true

# Configuration des logs
logging:
  level:
    com.yooyob.erp: DEBUG
    org.springframework.data.cassandra: WARN
    com.datastax.oss.driver: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/facturation-erp.log

# Configuration Management
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    export:
      prometheus:
        enabled: true

---
# Profil d√©veloppement
spring:
  config:
    activate:
      on-profile: dev

  devtools:
    restart:
      enabled: true

  cassandra:
    schema-action: recreate_drop_unused

logging:
  level:
    com.yooyob.erp: DEBUG

---
# Profil production
spring:
  config:
    activate:
      on-profile: prod

  cassandra:
    schema-action: validate
    ssl: true

  data:
    redis:
      ssl: true
      password: ${REDIS_PASSWORD}

logging:
  level:
    com.yooyob.erp: INFO
    root: WARN

app:
  jwt:
    secret: ${JWT_SECRET}

---
# Profil Docker
spring:
  config:
    activate:
      on-profile: docker

  cassandra:
    contact-points: scylla

  data:
    redis:
      host: redis

  mail:
    host: mailhog